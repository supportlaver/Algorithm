# 입력으로 5 3 7 8 6 2 9 4 가 들어왔다고 생각해보자.
# 한 번에 처음부터 끝까지 최대 부분 증가 수열을 보기 보다는 작은 문제에서부터 시작을 해보자.
# 첫 번째 원소인 5 가 마지막으로 있을 때는 5 경우만 있다.
# 두 번째 원소인 3 이 마지막으로 있을 때는 3 경우만 있다.
# 세 번째 원소인 7 이 마지막으로 있을 때는 57 , 37 인 경우가 있다.
# -> 이때는 끝이 3 , 5 이면 되기 떄문에 3 , 5 뒤에 7 만 붙혀주면 된다.
# 네 번쨰 원소인 8 이 마지막으로 있을 때는 378 , 578 , 38 , 58 인 경우가 있다.
# -> 이 떄는 끝이 7 , 3 , 5 로 끝나는 경우에 뒤에 8만 붙혀주면 된다.

# 이렇게 진행되는 것을 dy 라는 테이블에 저장을 해가면서 하면 된다.
# dy[3] 이 나타내는 값이 인덱스가 3 인 값이 마지막 수일 때 최대 부분 증가 수열의 최대 길이를 넣어준다.
# dy[3] 이 7 일때 7 이 마지막 수 일떄 최대 부분 증가 수열은 2 이기 때문에 2를 dy[3] 에 저장해준다.

n = int(input())
arr = list(map(int,input().split()))
arr.insert(0,0)
dy = [0] * (n+1)
dy[1] = 1
res = 0

for i in range(2,n+1):
    maxx = 0
    for j in range(i-1,0,-1):
        if arr[i] > arr[j] and dy[j]>maxx:
            maxx = dy[j]
    dy[i] = maxx+1
    if dy[i] > res:
        res = dy[i]

print(dy)
            
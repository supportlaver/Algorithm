# 최대 선 연결하기 문제는 따지고 보면 최대 부분 증가 수열을 구하는 문제와 같다.
# 굳이 선을 이을려는 경우의 수를 생각하려기 보다는 그냥 뒤죽박죽으로 넘어온 수열에서
# 최대 부분 증가 수열을 구하면 된다.
# 그 이유는 왼쪽의 수열은 어차피 1~N 까지 오름차순으로 넘어오기 때문에 오른쪽이 증가 수열이라면
# 선이 겹치지 않는다.

# 하지만 오른쪽이 증가 수열이 아니라면 왼쪽 선과 이을 때 선이 겹쳐버리게 된다.

# 즉 전에 배웠던 최대 부분 증가 수열의 문제와 동일하다.

n = int(input())
nums = list(map(int,input().split()))
nums.insert(0,0)
dp = [0] * (n+1)
res = 0
dp[1] = 1

for i in range(2,n+1):
    maxx = 0
    for j in range(i-1,0,-1):
        # 증가수열을 만들 수 있으면서 dp 에서 가장 큰 값을 뽑는 과정
        if nums[j] < nums[i] and dp[j] > maxx:
            maxx = dp[j]
    # 뽑은 후 자기 자신을 뒤에 붙히면 되니까 + 1 을 해준다.
    dp[i] = maxx+1
    if dp[i] > res:
        res = dp[i] 
print(res)